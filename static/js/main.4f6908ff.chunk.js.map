{"version":3,"sources":["Components/Controls/Controls.module.css","Components/Balance/Balance.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/Dashboard/Dashboard.module.css","Components/Controls/Controls.js","Components/Balance/Balance.js","Components/TransactionHistory/TransactionHistory.js","Components/Dashboard/Dashboard.js","index.js","Components/App/App.js"],"names":["module","exports","Controls","state","inputText","handleinputTextChange","e","setState","currentTarget","value","handleDeposit","checkOperation","name","props","onDeposit","handleWithdraw","onWithdraw","operation","toast","info","position","POSITION","TOP_RIGHT","balance","error","this","className","styles","controls","type","onChange","onClick","PureComponent","Balance","stats","income","expenses","TransactionHistory","items","history","map","item","key","id","amount","date","Dashboard","transactions","handleIncome","reduce","res","handeleOperation","mode","transaction","shortid","generate","Number","Date","toLocaleString","JSON","parse","localStorage","getItem","setItem","stringify","dashboard","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f6908ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__hd9gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2qPS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__7OFok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2Lu4W\"};","import React, { PureComponent } from 'react';\nimport T from 'prop-types';\nimport { toast } from 'react-toastify';\nimport styles from './Controls.module.css';\n\nexport default class Controls extends PureComponent {\n  static propTypes = {\n    onDeposit: T.func.isRequired,\n    onWithdraw: T.func.isRequired,\n    balance: T.number.isRequired,\n  };\n\n  state = { inputText: '' };\n\n  handleinputTextChange = e => {\n    this.setState({ inputText: e.currentTarget.value });\n  };\n\n  handleDeposit = e => {\n    if (this.checkOperation(e.currentTarget.name)) {\n      this.props.onDeposit(e.currentTarget.name, this.state.inputText);\n      this.setState({ inputText: '' });\n    } else this.setState({ inputText: '' });\n  };\n\n  handleWithdraw = e => {\n    if (this.checkOperation(e.currentTarget.name)) {\n      this.props.onWithdraw(e.currentTarget.name, this.state.inputText);\n      this.setState({ inputText: '' });\n    } else this.setState({ inputText: '' });\n  };\n\n  checkOperation = operation => {\n    if (this.state.inputText <= 0) {\n      toast.info('Введите сумму для проведения операции!', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return 0;\n    }\n    if (operation === 'Withdraw') {\n      if (this.state.inputText > this.props.balance) {\n        toast.error('На счету недостаточно средств для проведения операции!', {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n        return 0;\n      }\n    }\n    return true;\n  };\n\n  render() {\n    const { inputText } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={inputText}\n          onChange={this.handleinputTextChange}\n        />\n        <button type=\"button\" name=\"Deposit\" onClick={this.handleDeposit}>\n          Deposit\n        </button>\n        <button type=\"button\" name=\"Withdraw\" onClick={this.handleWithdraw}>\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Balance.module.css';\n\nexport default function Balance({ stats: { income, expenses }, balance }) {\n  return (\n    <section className={styles.balance}>\n      <span>{income}$</span>\n      <span> {expenses}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n}\nBalance.propTypes = {\n  stats: T.shape({\n    income: T.number.isRequired,\n    expenses: T.number.isRequired,\n  }).isRequired,\n  balance: T.number.isRequired,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\nTransactionHistory.propTypes = {\n  items: T.arrayOf(\n    T.exact({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.number.isRequired,\n      date: T.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport TransactionHistory from '../TransactionHistory';\nimport styles from './Dashboard.module.css';\n\nclass Dashboard extends PureComponent {\n  state = { transactions: [], balance: 0 };\n\n  componentDidMount() {\n    try {\n      this.setState(JSON.parse(localStorage.getItem('data')));\n    } catch (error) {\n      toast.error('Ошибка чтения данных из localstorage', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    try {\n      localStorage.setItem('data', JSON.stringify(this.state));\n    } catch (error) {\n      toast.error('Ошибка записи  данных в localstorage', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  }\n\n  handleIncome = () => {\n    return this.state.transactions.reduce(\n      (res, item) => {\n        const income = item.type === 'Deposit' && item.amount;\n        const expenses = item.type === 'Withdraw' && item.amount;\n        return {\n          income: income + res.income,\n          expenses: expenses + res.expenses,\n        };\n      },\n      { income: 0, expenses: 0 },\n    );\n  };\n\n  handeleOperation = (mode, amount) => {\n    const transaction = {\n      id: shortid.generate(),\n      type: mode,\n      amount: Number(amount),\n      date: new Date().toLocaleString(),\n    };\n\n    this.setState(state => {\n      return {\n        transactions: [...state.transactions, transaction],\n        balance:\n          transaction.type === 'Deposit'\n            ? state.balance + transaction.amount\n            : state.balance - transaction.amount,\n      };\n    });\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          onDeposit={this.handeleOperation}\n          onWithdraw={this.handeleOperation}\n          balance={balance}\n        />\n        {transactions.length > 0 && (\n          <Balance stats={this.handleIncome()} balance={balance} />\n        )}\n\n        {transactions.length > 0 && <TransactionHistory items={transactions} />}\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Dashboard from '../Dashboard';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nexport default function App() {\n  return (\n    <>\n      <Dashboard />\n      <ToastContainer />\n    </>\n  );\n}\n"],"sourceRoot":""}